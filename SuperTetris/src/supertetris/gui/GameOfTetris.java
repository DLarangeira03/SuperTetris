/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package supertetris.gui;

import Events.GameListener;
import Resources.Resources;
import Game.TetrisGame;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;

/**
 *
 * @author diogo
 */
public class GameOfTetris extends javax.swing.JDialog implements ActionListener, GameListener {

   
    Clip sound;
    Clip loss;
    
    /**
     * Creates new form GameOfTetris
     */
    public GameOfTetris(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setIcon();
        
        repaint();
        
        tetrisGame1.requestFocus();
        tetrisGame1.addTetrisListener(this);
        
        
        
        jPanelPause.setVisible(false);
        jPanelGameOver.setVisible(false);
        
        try {
            sound = Resources.loadResourceSound("resources/music.wav");
        } catch (IOException | UnsupportedAudioFileException | LineUnavailableException ex) {
            Logger.getLogger(GameOfTetris.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            loss = Resources.loadResourceSound("resources/loss.wav");
        } catch (IOException | UnsupportedAudioFileException | LineUnavailableException ex) {
            Logger.getLogger(GameOfTetris.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        sound.start();
        sound.loop(Clip.LOOP_CONTINUOUSLY);
        
        loss.stop(); 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backGround = new javax.swing.JPanel();
        jGame = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btCreate = new javax.swing.JButton();
        btPause = new javax.swing.JButton();
        btMute = new javax.swing.JButton();
        btUnMute = new javax.swing.JButton();
        jPanelLetrasTetris = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txScore = new javax.swing.JTextField();
        jlScore = new javax.swing.JLabel();
        tetrisGame1 = new Game.TetrisGame();
        txtLines = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPieces = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtLevel = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanelGameOver = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btMenu1 = new javax.swing.JButton();
        btTryAgain = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txScore1 = new javax.swing.JTextField();
        jlScore1 = new javax.swing.JLabel();
        jPanelPause = new javax.swing.JPanel();
        btMenu = new javax.swing.JButton();
        btResume1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TetrisGame");
        setResizable(false);

        backGround.setBackground(new java.awt.Color(0, 0, 0));
        backGround.setMaximumSize(new java.awt.Dimension(1280, 720));
        backGround.setMinimumSize(new java.awt.Dimension(1000, 600));
        backGround.setPreferredSize(new java.awt.Dimension(1280, 720));

        jGame.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jGame.setMaximumSize(new java.awt.Dimension(1280, 720));
        jGame.setMinimumSize(new java.awt.Dimension(1000, 600));
        jGame.setOpaque(false);
        jGame.setPreferredSize(new java.awt.Dimension(1280, 720));

        btCreate.setBackground(new java.awt.Color(0, 0, 0));
        btCreate.setFont(new java.awt.Font("Elephant", 0, 14)); // NOI18N
        btCreate.setForeground(new java.awt.Color(255, 255, 255));
        btCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/restart.png"))); // NOI18N
        btCreate.setText("Restart");
        btCreate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));
        btCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCreateActionPerformed(evt);
            }
        });

        btPause.setBackground(new java.awt.Color(0, 0, 0));
        btPause.setFont(new java.awt.Font("Elephant", 0, 14)); // NOI18N
        btPause.setForeground(new java.awt.Color(255, 255, 255));
        btPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/btnPause (1).png"))); // NOI18N
        btPause.setText("Pause");
        btPause.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));
        btPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPauseActionPerformed(evt);
            }
        });

        btMute.setBackground(new java.awt.Color(0, 0, 0));
        btMute.setFont(new java.awt.Font("Elephant", 0, 14)); // NOI18N
        btMute.setForeground(new java.awt.Color(255, 255, 255));
        btMute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mute.png"))); // NOI18N
        btMute.setBorder(null);
        btMute.setOpaque(true);
        btMute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMuteActionPerformed(evt);
            }
        });
        btMute.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btMuteKeyPressed(evt);
            }
        });

        btUnMute.setBackground(new java.awt.Color(0, 0, 0));
        btUnMute.setFont(new java.awt.Font("Elephant", 0, 14)); // NOI18N
        btUnMute.setForeground(new java.awt.Color(255, 255, 255));
        btUnMute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/unmute.png"))); // NOI18N
        btUnMute.setBorder(null);
        btUnMute.setOpaque(true);
        btUnMute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUnMuteActionPerformed(evt);
            }
        });

        jPanelLetrasTetris.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Elephant", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("T");

        jLabel6.setFont(new java.awt.Font("Elephant", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 102, 0));
        jLabel6.setText("E");

        jLabel7.setFont(new java.awt.Font("Elephant", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("T");

        jLabel8.setFont(new java.awt.Font("Elephant", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 153, 0));
        jLabel8.setText("R");

        jLabel9.setFont(new java.awt.Font("Elephant", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 204, 204));
        jLabel9.setText("I");

        jLabel10.setFont(new java.awt.Font("Elephant", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 0, 153));
        jLabel10.setText("S");

        javax.swing.GroupLayout jPanelLetrasTetrisLayout = new javax.swing.GroupLayout(jPanelLetrasTetris);
        jPanelLetrasTetris.setLayout(jPanelLetrasTetrisLayout);
        jPanelLetrasTetrisLayout.setHorizontalGroup(
            jPanelLetrasTetrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLetrasTetrisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addContainerGap())
        );
        jPanelLetrasTetrisLayout.setVerticalGroup(
            jPanelLetrasTetrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLetrasTetrisLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanelLetrasTetrisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(25, 25, 25))
        );

        txScore.setEditable(false);
        txScore.setBackground(new java.awt.Color(51, 51, 51));
        txScore.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        txScore.setForeground(new java.awt.Color(255, 255, 255));
        txScore.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txScoreActionPerformed(evt);
            }
        });

        jlScore.setFont(new java.awt.Font("Elephant", 0, 36)); // NOI18N
        jlScore.setForeground(new java.awt.Color(255, 255, 255));
        jlScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlScore.setText("Score");

        javax.swing.GroupLayout tetrisGame1Layout = new javax.swing.GroupLayout(tetrisGame1);
        tetrisGame1.setLayout(tetrisGame1Layout);
        tetrisGame1Layout.setHorizontalGroup(
            tetrisGame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );
        tetrisGame1Layout.setVerticalGroup(
            tetrisGame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 586, Short.MAX_VALUE)
        );

        txtLines.setEditable(false);
        txtLines.setBackground(new java.awt.Color(51, 51, 51));
        txtLines.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        txtLines.setForeground(new java.awt.Color(255, 255, 255));
        txtLines.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinesActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Elephant", 0, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Lines");

        txtPieces.setEditable(false);
        txtPieces.setBackground(new java.awt.Color(51, 51, 51));
        txtPieces.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        txtPieces.setForeground(new java.awt.Color(255, 255, 255));
        txtPieces.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPieces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPiecesActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Elephant", 0, 36)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Pieces");

        txtLevel.setEditable(false);
        txtLevel.setBackground(new java.awt.Color(51, 51, 51));
        txtLevel.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        txtLevel.setForeground(new java.awt.Color(255, 255, 255));
        txtLevel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLevel.setText("1");

        jLabel14.setFont(new java.awt.Font("Elephant", 0, 36)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Level");

        javax.swing.GroupLayout jGameLayout = new javax.swing.GroupLayout(jGame);
        jGame.setLayout(jGameLayout);
        jGameLayout.setHorizontalGroup(
            jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGameLayout.createSequentialGroup()
                .addGroup(jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jGameLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jPanelLetrasTetris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 473, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jGameLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txScore, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlScore))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tetrisGame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGameLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btCreate, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                            .addComponent(btPause, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                        .addGap(47, 47, 47))
                    .addGroup(jGameLayout.createSequentialGroup()
                        .addGroup(jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jGameLayout.createSequentialGroup()
                                .addGap(320, 320, 320)
                                .addComponent(btUnMute)
                                .addGap(18, 18, 18)
                                .addComponent(btMute))
                            .addGroup(jGameLayout.createSequentialGroup()
                                .addGap(319, 319, 319)
                                .addGroup(jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addGroup(jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14)
                                        .addGroup(jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtPieces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(76, 76, 76))))
        );

        jGameLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btCreate, btPause});

        jGameLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlScore, txScore, txtLevel, txtLines, txtPieces});

        jGameLayout.setVerticalGroup(
            jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGameLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btPause, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPieces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btUnMute)
                    .addComponent(btMute, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tetrisGame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addGap(88, 88, 88))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGameLayout.createSequentialGroup()
                .addComponent(jPanelLetrasTetris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166)
                .addComponent(jlScore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txScore, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jGameLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txScore, txtLevel, txtLines, txtPieces});

        jPanelGameOver.setBackground(new java.awt.Color(0, 0, 0));
        jPanelGameOver.setPreferredSize(new java.awt.Dimension(1280, 720));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/gameOver.gif"))); // NOI18N

        btMenu1.setBackground(new java.awt.Color(0, 0, 0));
        btMenu1.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        btMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/noQuit.gif"))); // NOI18N
        btMenu1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(102, 102, 102)));
        btMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMenu1ActionPerformed(evt);
            }
        });

        btTryAgain.setBackground(new java.awt.Color(0, 0, 0));
        btTryAgain.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        btTryAgain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/yesQuit.gif"))); // NOI18N
        btTryAgain.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(102, 102, 102)));
        btTryAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTryAgainActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tryAgainGame.gif"))); // NOI18N

        txScore1.setEditable(false);
        txScore1.setBackground(new java.awt.Color(51, 51, 51));
        txScore1.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        txScore1.setForeground(new java.awt.Color(255, 255, 255));
        txScore1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txScore1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txScore1ActionPerformed(evt);
            }
        });

        jlScore1.setFont(new java.awt.Font("Elephant", 0, 48)); // NOI18N
        jlScore1.setForeground(new java.awt.Color(255, 255, 255));
        jlScore1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlScore1.setText("Score");

        javax.swing.GroupLayout jPanelGameOverLayout = new javax.swing.GroupLayout(jPanelGameOver);
        jPanelGameOver.setLayout(jPanelGameOverLayout);
        jPanelGameOverLayout.setHorizontalGroup(
            jPanelGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGameOverLayout.createSequentialGroup()
                .addContainerGap(494, Short.MAX_VALUE)
                .addGroup(jPanelGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGameOverLayout.createSequentialGroup()
                        .addGroup(jPanelGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelGameOverLayout.createSequentialGroup()
                                .addComponent(btTryAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(btMenu1)))
                        .addGap(456, 456, 456))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGameOverLayout.createSequentialGroup()
                        .addGroup(jPanelGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlScore1)
                            .addComponent(txScore1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(569, 569, 569))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGameOverLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(472, 472, 472))))
        );
        jPanelGameOverLayout.setVerticalGroup(
            jPanelGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGameOverLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jlScore1)
                .addGap(40, 40, 40)
                .addComponent(txScore1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(jPanelGameOverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btTryAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btMenu1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        jPanelPause.setBackground(new java.awt.Color(0, 0, 0));
        jPanelPause.setPreferredSize(new java.awt.Dimension(1280, 720));

        btMenu.setBackground(new java.awt.Color(0, 0, 0));
        btMenu.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        btMenu.setText("Main Menu");
        btMenu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(102, 102, 102)));
        btMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMenuActionPerformed(evt);
            }
        });

        btResume1.setBackground(new java.awt.Color(0, 0, 0));
        btResume1.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        btResume1.setText("Resume");
        btResume1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(51, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(102, 102, 102)));
        btResume1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResume1ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pausegif.gif"))); // NOI18N

        javax.swing.GroupLayout jPanelPauseLayout = new javax.swing.GroupLayout(jPanelPause);
        jPanelPause.setLayout(jPanelPauseLayout);
        jPanelPauseLayout.setHorizontalGroup(
            jPanelPauseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPauseLayout.createSequentialGroup()
                .addGroup(jPanelPauseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPauseLayout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPauseLayout.createSequentialGroup()
                        .addGap(517, 517, 517)
                        .addGroup(jPanelPauseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btResume1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(243, Short.MAX_VALUE))
        );
        jPanelPauseLayout.setVerticalGroup(
            jPanelPauseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPauseLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(btResume1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154)
                .addComponent(btMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout backGroundLayout = new javax.swing.GroupLayout(backGround);
        backGround.setLayout(backGroundLayout);
        backGroundLayout.setHorizontalGroup(
            backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backGroundLayout.createSequentialGroup()
                .addComponent(jGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backGroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelGameOver, javax.swing.GroupLayout.DEFAULT_SIZE, 1286, Short.MAX_VALUE)))
            .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backGroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelPause, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        backGroundLayout.setVerticalGroup(
            backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backGroundLayout.createSequentialGroup()
                .addComponent(jGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backGroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelGameOver, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)))
            .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backGroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelPause, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCreateActionPerformed
        tetrisGame1.resize(20, 10);
        tetrisGame1.requestFocus();
        tetrisGame1.addTetrisListener(this);
        tetrisGame1.setScore(0);
        tetrisGame1.setnLines(0);
        txtLines.setText("0");
        tetrisGame1.setnPieces(0);
        txtPieces.setText("0");
        txtLevel.setText("1"); 
        tetrisGame1.getTimer().setDelay(600);
        
    }//GEN-LAST:event_btCreateActionPerformed

    private void btPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPauseActionPerformed
            tetrisGame1.getTimer().stop();
            jPanelPause.setVisible(true);
            jGame.setVisible(false);
        
    }//GEN-LAST:event_btPauseActionPerformed

    private void btMuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMuteActionPerformed
        sound.stop();
        tetrisGame1.requestFocus();
        tetrisGame1.addTetrisListener(this);
    }//GEN-LAST:event_btMuteActionPerformed

    private void btUnMuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUnMuteActionPerformed
        sound.start();
        sound.loop(Clip.LOOP_CONTINUOUSLY);
        tetrisGame1.requestFocus();
        tetrisGame1.addTetrisListener(this);
    }//GEN-LAST:event_btUnMuteActionPerformed

    private void btMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMenu1ActionPerformed
        sound.stop();
        this.dispose();
    }//GEN-LAST:event_btMenu1ActionPerformed

    private void btTryAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTryAgainActionPerformed
        jPanelGameOver.setVisible(false);
        jGame.setVisible(true);
        tetrisGame1.resize(20, 10);
        tetrisGame1.requestFocus();
        tetrisGame1.addTetrisListener(this);
        tetrisGame1.setScore(0);
        tetrisGame1.setnLines(0);
        txtLines.setText("0");
        tetrisGame1.setnPieces(0);
        txtPieces.setText("0");
        txtLevel.setText("1");
        tetrisGame1.getTimer().restart();
        tetrisGame1.getTimer().setDelay(600);
        sound.start();
        sound.loop(Clip.LOOP_CONTINUOUSLY);
    }//GEN-LAST:event_btTryAgainActionPerformed

    private void btMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMenuActionPerformed
        sound.stop();
        this.dispose();
    }//GEN-LAST:event_btMenuActionPerformed

    private void btResume1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResume1ActionPerformed
        jPanelPause.setVisible(false);
        jGame.setVisible(true);
        tetrisGame1.getTimer().restart();
        tetrisGame1.requestFocus();
        tetrisGame1.addTetrisListener(this);
    }//GEN-LAST:event_btResume1ActionPerformed

    private void txScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txScoreActionPerformed

    private void txtLinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinesActionPerformed

    private void txtPiecesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPiecesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPiecesActionPerformed

    private void txScore1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txScore1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txScore1ActionPerformed

    private void btMuteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btMuteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_M) {
            sound.stop();
            tetrisGame1.requestFocus();
            tetrisGame1.addTetrisListener(this); 
        }
    }//GEN-LAST:event_btMuteKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameOfTetris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameOfTetris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameOfTetris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameOfTetris.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GameOfTetris dialog = new GameOfTetris(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backGround;
    private javax.swing.JButton btCreate;
    private javax.swing.JButton btMenu;
    private javax.swing.JButton btMenu1;
    private javax.swing.JButton btMute;
    private javax.swing.JButton btPause;
    private javax.swing.JButton btResume1;
    private javax.swing.JButton btTryAgain;
    private javax.swing.JButton btUnMute;
    private javax.swing.JPanel jGame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelGameOver;
    private javax.swing.JPanel jPanelLetrasTetris;
    private javax.swing.JPanel jPanelPause;
    private javax.swing.JLabel jlScore;
    private javax.swing.JLabel jlScore1;
    private Game.TetrisGame tetrisGame1;
    private javax.swing.JTextField txScore;
    private javax.swing.JTextField txScore1;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtLines;
    private javax.swing.JTextField txtPieces;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/icon.png")));
    }

    @Override
    public void onGameOver() {
       sound.stop();
       loss.start(); 
       jPanelGameOver.setVisible(true);
       jGame.setVisible(false);
       tetrisGame1.getTimer().stop();
    }


    
    @Override
    public void score(TetrisGame tg) {
        txScore.setText(String.valueOf(tg.getScore()));
        txScore1.setText(String.valueOf(tg.getScore()));
        
        //nivel 2
       if(tg.getScore() >= 500){
           txtLevel.setText("2");
           tetrisGame1.getTimer().setDelay(600);
       }
       
       //nivel 3
       if(tg.getScore() >= 1000){
           txtLevel.setText("3");
           tetrisGame1.getTimer().setDelay(500);
       }
       
       //nivel 4
       if(tg.getScore() >= 1500){
           txtLevel.setText("4");
           tetrisGame1.getTimer().setDelay(400);
       }
       
       //nivel 5
       if(tg.getScore() >= 2000){
           txtLevel.setText("5");
           tetrisGame1.getTimer().setDelay(200);
       }
    }
    
    @Override
    public void completeLines(TetrisGame board) {
      txtLines.setText(String.valueOf(board.getnLines()));
    }
    
    @Override
    public void numberPieces(TetrisGame board) {
       txtPieces.setText(String.valueOf(board.getnPieces()));
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
       
    }

    

    
    
}
